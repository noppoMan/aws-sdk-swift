//===----------------------------------------------------------------------===//
//
// This source file is part of the Soto for AWS open source project
//
// Copyright (c) 2017-2020 the Soto project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Soto project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/soto/blob/main/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import Foundation
import SotoCore

extension ComputeOptimizer {
    // MARK: Enums

    public enum ExportableAutoScalingGroupField: String, CustomStringConvertible, Codable {
        case accountid = "AccountId"
        case autoscalinggrouparn = "AutoScalingGroupArn"
        case autoscalinggroupname = "AutoScalingGroupName"
        case finding = "Finding"
        case utilizationmetricscpumaximum = "UtilizationMetricsCpuMaximum"
        case utilizationmetricsmemorymaximum = "UtilizationMetricsMemoryMaximum"
        case lookbackperiodindays = "LookbackPeriodInDays"
        case currentconfigurationinstancetype = "CurrentConfigurationInstanceType"
        case currentconfigurationdesiredcapacity = "CurrentConfigurationDesiredCapacity"
        case currentconfigurationminsize = "CurrentConfigurationMinSize"
        case currentconfigurationmaxsize = "CurrentConfigurationMaxSize"
        case currentondemandprice = "CurrentOnDemandPrice"
        case currentstandardoneyearnoupfrontreservedprice = "CurrentStandardOneYearNoUpfrontReservedPrice"
        case currentstandardthreeyearnoupfrontreservedprice = "CurrentStandardThreeYearNoUpfrontReservedPrice"
        case currentvcpus = "CurrentVCpus"
        case currentmemory = "CurrentMemory"
        case currentstorage = "CurrentStorage"
        case currentnetwork = "CurrentNetwork"
        case recommendationoptionsconfigurationinstancetype = "RecommendationOptionsConfigurationInstanceType"
        case recommendationoptionsconfigurationdesiredcapacity = "RecommendationOptionsConfigurationDesiredCapacity"
        case recommendationoptionsconfigurationminsize = "RecommendationOptionsConfigurationMinSize"
        case recommendationoptionsconfigurationmaxsize = "RecommendationOptionsConfigurationMaxSize"
        case recommendationoptionsprojectedutilizationmetricscpumaximum = "RecommendationOptionsProjectedUtilizationMetricsCpuMaximum"
        case recommendationoptionsprojectedutilizationmetricsmemorymaximum = "RecommendationOptionsProjectedUtilizationMetricsMemoryMaximum"
        case recommendationoptionsperformancerisk = "RecommendationOptionsPerformanceRisk"
        case recommendationoptionsondemandprice = "RecommendationOptionsOnDemandPrice"
        case recommendationoptionsstandardoneyearnoupfrontreservedprice = "RecommendationOptionsStandardOneYearNoUpfrontReservedPrice"
        case recommendationoptionsstandardthreeyearnoupfrontreservedprice = "RecommendationOptionsStandardThreeYearNoUpfrontReservedPrice"
        case recommendationoptionsvcpus = "RecommendationOptionsVcpus"
        case recommendationoptionsmemory = "RecommendationOptionsMemory"
        case recommendationoptionsstorage = "RecommendationOptionsStorage"
        case recommendationoptionsnetwork = "RecommendationOptionsNetwork"
        case lastrefreshtimestamp = "LastRefreshTimestamp"
        public var description: String { return self.rawValue }
    }

    public enum ExportableInstanceField: String, CustomStringConvertible, Codable {
        case accountid = "AccountId"
        case instancearn = "InstanceArn"
        case instancename = "InstanceName"
        case finding = "Finding"
        case lookbackperiodindays = "LookbackPeriodInDays"
        case currentinstancetype = "CurrentInstanceType"
        case utilizationmetricscpumaximum = "UtilizationMetricsCpuMaximum"
        case utilizationmetricsmemorymaximum = "UtilizationMetricsMemoryMaximum"
        case currentondemandprice = "CurrentOnDemandPrice"
        case currentstandardoneyearnoupfrontreservedprice = "CurrentStandardOneYearNoUpfrontReservedPrice"
        case currentstandardthreeyearnoupfrontreservedprice = "CurrentStandardThreeYearNoUpfrontReservedPrice"
        case currentvcpus = "CurrentVCpus"
        case currentmemory = "CurrentMemory"
        case currentstorage = "CurrentStorage"
        case currentnetwork = "CurrentNetwork"
        case recommendationoptionsinstancetype = "RecommendationOptionsInstanceType"
        case recommendationoptionsprojectedutilizationmetricscpumaximum = "RecommendationOptionsProjectedUtilizationMetricsCpuMaximum"
        case recommendationoptionsprojectedutilizationmetricsmemorymaximum = "RecommendationOptionsProjectedUtilizationMetricsMemoryMaximum"
        case recommendationoptionsperformancerisk = "RecommendationOptionsPerformanceRisk"
        case recommendationoptionsvcpus = "RecommendationOptionsVcpus"
        case recommendationoptionsmemory = "RecommendationOptionsMemory"
        case recommendationoptionsstorage = "RecommendationOptionsStorage"
        case recommendationoptionsnetwork = "RecommendationOptionsNetwork"
        case recommendationoptionsondemandprice = "RecommendationOptionsOnDemandPrice"
        case recommendationoptionsstandardoneyearnoupfrontreservedprice = "RecommendationOptionsStandardOneYearNoUpfrontReservedPrice"
        case recommendationoptionsstandardthreeyearnoupfrontreservedprice = "RecommendationOptionsStandardThreeYearNoUpfrontReservedPrice"
        case recommendationssourcesrecommendationsourcearn = "RecommendationsSourcesRecommendationSourceArn"
        case recommendationssourcesrecommendationsourcetype = "RecommendationsSourcesRecommendationSourceType"
        case lastrefreshtimestamp = "LastRefreshTimestamp"
        public var description: String { return self.rawValue }
    }

    public enum FileFormat: String, CustomStringConvertible, Codable {
        case csv = "Csv"
        public var description: String { return self.rawValue }
    }

    public enum FilterName: String, CustomStringConvertible, Codable {
        case finding = "Finding"
        case recommendationsourcetype = "RecommendationSourceType"
        public var description: String { return self.rawValue }
    }

    public enum Finding: String, CustomStringConvertible, Codable {
        case underprovisioned = "Underprovisioned"
        case overprovisioned = "Overprovisioned"
        case optimized = "Optimized"
        case notoptimized = "NotOptimized"
        public var description: String { return self.rawValue }
    }

    public enum JobFilterName: String, CustomStringConvertible, Codable {
        case resourcetype = "ResourceType"
        case jobstatus = "JobStatus"
        public var description: String { return self.rawValue }
    }

    public enum JobStatus: String, CustomStringConvertible, Codable {
        case queued = "Queued"
        case inprogress = "InProgress"
        case complete = "Complete"
        case failed = "Failed"
        public var description: String { return self.rawValue }
    }

    public enum MetricName: String, CustomStringConvertible, Codable {
        case cpu = "Cpu"
        case memory = "Memory"
        public var description: String { return self.rawValue }
    }

    public enum MetricStatistic: String, CustomStringConvertible, Codable {
        case maximum = "Maximum"
        case average = "Average"
        public var description: String { return self.rawValue }
    }

    public enum RecommendationSourceType: String, CustomStringConvertible, Codable {
        case ec2instance = "Ec2Instance"
        case autoscalinggroup = "AutoScalingGroup"
        public var description: String { return self.rawValue }
    }

    public enum ResourceType: String, CustomStringConvertible, Codable {
        case ec2instance = "Ec2Instance"
        case autoscalinggroup = "AutoScalingGroup"
        public var description: String { return self.rawValue }
    }

    public enum Status: String, CustomStringConvertible, Codable {
        case active = "Active"
        case inactive = "Inactive"
        case pending = "Pending"
        case failed = "Failed"
        public var description: String { return self.rawValue }
    }

    // MARK: Shapes

    public struct AutoScalingGroupConfiguration: AWSDecodableShape {
        /// The desired capacity, or number of instances, for the Auto Scaling group.
        public let desiredCapacity: Int?
        /// The instance type for the Auto Scaling group.
        public let instanceType: String?
        /// The maximum size, or maximum number of instances, for the Auto Scaling group.
        public let maxSize: Int?
        /// The minimum size, or minimum number of instances, for the Auto Scaling group.
        public let minSize: Int?

        public init(desiredCapacity: Int? = nil, instanceType: String? = nil, maxSize: Int? = nil, minSize: Int? = nil) {
            self.desiredCapacity = desiredCapacity
            self.instanceType = instanceType
            self.maxSize = maxSize
            self.minSize = minSize
        }

        private enum CodingKeys: String, CodingKey {
            case desiredCapacity
            case instanceType
            case maxSize
            case minSize
        }
    }

    public struct AutoScalingGroupRecommendation: AWSDecodableShape {
        /// The AWS account ID of the Auto Scaling group.
        public let accountId: String?
        /// The Amazon Resource Name (ARN) of the Auto Scaling group.
        public let autoScalingGroupArn: String?
        /// The name of the Auto Scaling group.
        public let autoScalingGroupName: String?
        /// An array of objects that describe the current configuration of the Auto Scaling group.
        public let currentConfiguration: AutoScalingGroupConfiguration?
        /// The finding classification for the Auto Scaling group. Findings for Auto Scaling groups include:     NotOptimized —An Auto Scaling group is considered not optimized when AWS Compute Optimizer identifies a recommendation that can provide better performance for your workload.     Optimized —An Auto Scaling group is considered optimized when Compute Optimizer determines that the group is correctly provisioned to run your workload based on the chosen instance type. For optimized resources, Compute Optimizer might recommend a new generation instance type.    The values that are returned might be NOT_OPTIMIZED or OPTIMIZED.
        public let finding: Finding?
        /// The time stamp of when the Auto Scaling group recommendation was last refreshed.
        public let lastRefreshTimestamp: TimeStamp?
        /// The number of days for which utilization metrics were analyzed for the Auto Scaling group.
        public let lookBackPeriodInDays: Double?
        /// An array of objects that describe the recommendation options for the Auto Scaling group.
        public let recommendationOptions: [AutoScalingGroupRecommendationOption]?
        /// An array of objects that describe the utilization metrics of the Auto Scaling group.
        public let utilizationMetrics: [UtilizationMetric]?

        public init(accountId: String? = nil, autoScalingGroupArn: String? = nil, autoScalingGroupName: String? = nil, currentConfiguration: AutoScalingGroupConfiguration? = nil, finding: Finding? = nil, lastRefreshTimestamp: TimeStamp? = nil, lookBackPeriodInDays: Double? = nil, recommendationOptions: [AutoScalingGroupRecommendationOption]? = nil, utilizationMetrics: [UtilizationMetric]? = nil) {
            self.accountId = accountId
            self.autoScalingGroupArn = autoScalingGroupArn
            self.autoScalingGroupName = autoScalingGroupName
            self.currentConfiguration = currentConfiguration
            self.finding = finding
            self.lastRefreshTimestamp = lastRefreshTimestamp
            self.lookBackPeriodInDays = lookBackPeriodInDays
            self.recommendationOptions = recommendationOptions
            self.utilizationMetrics = utilizationMetrics
        }

        private enum CodingKeys: String, CodingKey {
            case accountId
            case autoScalingGroupArn
            case autoScalingGroupName
            case currentConfiguration
            case finding
            case lastRefreshTimestamp
            case lookBackPeriodInDays
            case recommendationOptions
            case utilizationMetrics
        }
    }

    public struct AutoScalingGroupRecommendationOption: AWSDecodableShape {
        /// An array of objects that describe an Auto Scaling group configuration.
        public let configuration: AutoScalingGroupConfiguration?
        /// The performance risk of the Auto Scaling group configuration recommendation. Performance risk is the likelihood of the recommended instance type not meeting the performance requirement of your workload. The lowest performance risk is categorized as 0, and the highest as 5.
        public let performanceRisk: Double?
        /// An array of objects that describe the projected utilization metrics of the Auto Scaling group recommendation option.
        public let projectedUtilizationMetrics: [UtilizationMetric]?
        /// The rank of the Auto Scaling group recommendation option. The top recommendation option is ranked as 1.
        public let rank: Int?

        public init(configuration: AutoScalingGroupConfiguration? = nil, performanceRisk: Double? = nil, projectedUtilizationMetrics: [UtilizationMetric]? = nil, rank: Int? = nil) {
            self.configuration = configuration
            self.performanceRisk = performanceRisk
            self.projectedUtilizationMetrics = projectedUtilizationMetrics
            self.rank = rank
        }

        private enum CodingKeys: String, CodingKey {
            case configuration
            case performanceRisk
            case projectedUtilizationMetrics
            case rank
        }
    }

    public struct DescribeRecommendationExportJobsRequest: AWSEncodableShape {
        /// An array of objects that describe a filter to return a more specific list of export jobs.
        public let filters: [JobFilter]?
        /// The identification numbers of the export jobs to return. An export job ID is returned when you create an export using the ExportAutoScalingGroupRecommendations or ExportEC2InstanceRecommendations actions. All export jobs created in the last seven days are returned if this parameter is omitted.
        public let jobIds: [String]?
        /// The maximum number of export jobs to return with a single request. To retrieve the remaining results, make another request with the returned NextToken value.
        public let maxResults: Int?
        /// The token to advance to the next page of export jobs.
        public let nextToken: String?

        public init(filters: [JobFilter]? = nil, jobIds: [String]? = nil, maxResults: Int? = nil, nextToken: String? = nil) {
            self.filters = filters
            self.jobIds = jobIds
            self.maxResults = maxResults
            self.nextToken = nextToken
        }

        private enum CodingKeys: String, CodingKey {
            case filters
            case jobIds
            case maxResults
            case nextToken
        }
    }

    public struct DescribeRecommendationExportJobsResponse: AWSDecodableShape {
        /// The token to use to advance to the next page of export jobs. This value is null when there are no more pages of export jobs to return.
        public let nextToken: String?
        /// An array of objects that describe recommendation export jobs.
        public let recommendationExportJobs: [RecommendationExportJob]?

        public init(nextToken: String? = nil, recommendationExportJobs: [RecommendationExportJob]? = nil) {
            self.nextToken = nextToken
            self.recommendationExportJobs = recommendationExportJobs
        }

        private enum CodingKeys: String, CodingKey {
            case nextToken
            case recommendationExportJobs
        }
    }

    public struct ExportAutoScalingGroupRecommendationsRequest: AWSEncodableShape {
        /// The IDs of the AWS accounts for which to export Auto Scaling group recommendations. If your account is the master account of an organization, use this parameter to specify the member accounts for which you want to export recommendations. This parameter cannot be specified together with the include member accounts parameter. The parameters are mutually exclusive. Recommendations for member accounts are not included in the export if this parameter, or the include member accounts parameter, is omitted. You can specify multiple account IDs per request.
        public let accountIds: [String]?
        /// The recommendations data to include in the export file.
        public let fieldsToExport: [ExportableAutoScalingGroupField]?
        /// The format of the export file. The only export file format currently supported is Csv.
        public let fileFormat: FileFormat?
        /// An array of objects that describe a filter to export a more specific set of Auto Scaling group recommendations.
        public let filters: [Filter]?
        /// Indicates whether to include recommendations for resources in all member accounts of the organization if your account is the master account of an organization. The member accounts must also be opted in to Compute Optimizer. Recommendations for member accounts of the organization are not included in the export file if this parameter is omitted. This parameter cannot be specified together with the account IDs parameter. The parameters are mutually exclusive. Recommendations for member accounts are not included in the export if this parameter, or the account IDs parameter, is omitted.
        public let includeMemberAccounts: Bool?
        /// An object to specify the destination Amazon Simple Storage Service (Amazon S3) bucket name and key prefix for the export job. You must create the destination Amazon S3 bucket for your recommendations export before you create the export job. Compute Optimizer does not create the S3 bucket for you. After you create the S3 bucket, ensure that it has the required permission policy to allow Compute Optimizer to write the export file to it. If you plan to specify an object prefix when you create the export job, you must include the object prefix in the policy that you add to the S3 bucket. For more information, see Amazon S3 Bucket Policy for Compute Optimizer in the Compute Optimizer user guide.
        public let s3DestinationConfig: S3DestinationConfig

        public init(accountIds: [String]? = nil, fieldsToExport: [ExportableAutoScalingGroupField]? = nil, fileFormat: FileFormat? = nil, filters: [Filter]? = nil, includeMemberAccounts: Bool? = nil, s3DestinationConfig: S3DestinationConfig) {
            self.accountIds = accountIds
            self.fieldsToExport = fieldsToExport
            self.fileFormat = fileFormat
            self.filters = filters
            self.includeMemberAccounts = includeMemberAccounts
            self.s3DestinationConfig = s3DestinationConfig
        }

        private enum CodingKeys: String, CodingKey {
            case accountIds
            case fieldsToExport
            case fileFormat
            case filters
            case includeMemberAccounts
            case s3DestinationConfig
        }
    }

    public struct ExportAutoScalingGroupRecommendationsResponse: AWSDecodableShape {
        /// The identification number of the export job. Use the DescribeRecommendationExportJobs action, and specify the job ID to view the status of an export job.
        public let jobId: String?
        /// An object that describes the destination Amazon S3 bucket of a recommendations export file.
        public let s3Destination: S3Destination?

        public init(jobId: String? = nil, s3Destination: S3Destination? = nil) {
            self.jobId = jobId
            self.s3Destination = s3Destination
        }

        private enum CodingKeys: String, CodingKey {
            case jobId
            case s3Destination
        }
    }

    public struct ExportDestination: AWSDecodableShape {
        /// An object that describes the destination Amazon Simple Storage Service (Amazon S3) bucket name and object keys of a recommendations export file, and its associated metadata file.
        public let s3: S3Destination?

        public init(s3: S3Destination? = nil) {
            self.s3 = s3
        }

        private enum CodingKeys: String, CodingKey {
            case s3
        }
    }

    public struct ExportEC2InstanceRecommendationsRequest: AWSEncodableShape {
        /// The IDs of the AWS accounts for which to export instance recommendations. If your account is the master account of an organization, use this parameter to specify the member accounts for which you want to export recommendations. This parameter cannot be specified together with the include member accounts parameter. The parameters are mutually exclusive. Recommendations for member accounts are not included in the export if this parameter, or the include member accounts parameter, is omitted. You can specify multiple account IDs per request.
        public let accountIds: [String]?
        /// The recommendations data to include in the export file.
        public let fieldsToExport: [ExportableInstanceField]?
        /// The format of the export file. The only export file format currently supported is Csv.
        public let fileFormat: FileFormat?
        /// An array of objects that describe a filter to export a more specific set of instance recommendations.
        public let filters: [Filter]?
        /// Indicates whether to include recommendations for resources in all member accounts of the organization if your account is the master account of an organization. The member accounts must also be opted in to Compute Optimizer. Recommendations for member accounts of the organization are not included in the export file if this parameter is omitted. Recommendations for member accounts are not included in the export if this parameter, or the account IDs parameter, is omitted.
        public let includeMemberAccounts: Bool?
        /// An object to specify the destination Amazon Simple Storage Service (Amazon S3) bucket name and key prefix for the export job. You must create the destination Amazon S3 bucket for your recommendations export before you create the export job. Compute Optimizer does not create the S3 bucket for you. After you create the S3 bucket, ensure that it has the required permission policy to allow Compute Optimizer to write the export file to it. If you plan to specify an object prefix when you create the export job, you must include the object prefix in the policy that you add to the S3 bucket. For more information, see Amazon S3 Bucket Policy for Compute Optimizer in the Compute Optimizer user guide.
        public let s3DestinationConfig: S3DestinationConfig

        public init(accountIds: [String]? = nil, fieldsToExport: [ExportableInstanceField]? = nil, fileFormat: FileFormat? = nil, filters: [Filter]? = nil, includeMemberAccounts: Bool? = nil, s3DestinationConfig: S3DestinationConfig) {
            self.accountIds = accountIds
            self.fieldsToExport = fieldsToExport
            self.fileFormat = fileFormat
            self.filters = filters
            self.includeMemberAccounts = includeMemberAccounts
            self.s3DestinationConfig = s3DestinationConfig
        }

        private enum CodingKeys: String, CodingKey {
            case accountIds
            case fieldsToExport
            case fileFormat
            case filters
            case includeMemberAccounts
            case s3DestinationConfig
        }
    }

    public struct ExportEC2InstanceRecommendationsResponse: AWSDecodableShape {
        /// The identification number of the export job. Use the DescribeRecommendationExportJobs action, and specify the job ID to view the status of an export job.
        public let jobId: String?
        /// An object that describes the destination Amazon S3 bucket of a recommendations export file.
        public let s3Destination: S3Destination?

        public init(jobId: String? = nil, s3Destination: S3Destination? = nil) {
            self.jobId = jobId
            self.s3Destination = s3Destination
        }

        private enum CodingKeys: String, CodingKey {
            case jobId
            case s3Destination
        }
    }

    public struct Filter: AWSEncodableShape {
        /// The name of the filter. Specify Finding to return recommendations with a specific findings classification (e.g., Overprovisioned). Specify RecommendationSourceType to return recommendations of a specific resource type (e.g., AutoScalingGroup).
        public let name: FilterName?
        /// The value of the filter. If you specify the name parameter as Finding, and you request recommendations for an instance, then the valid values are Underprovisioned, Overprovisioned, NotOptimized, or Optimized. If you specify the name parameter as Finding, and you request recommendations for an Auto Scaling group, then the valid values are Optimized, or NotOptimized. If you specify the name parameter as RecommendationSourceType, then the valid values are Ec2Instance, or AutoScalingGroup.
        public let values: [String]?

        public init(name: FilterName? = nil, values: [String]? = nil) {
            self.name = name
            self.values = values
        }

        private enum CodingKeys: String, CodingKey {
            case name
            case values
        }
    }

    public struct GetAutoScalingGroupRecommendationsRequest: AWSEncodableShape {
        /// The IDs of the AWS accounts for which to return Auto Scaling group recommendations. If your account is the master account of an organization, use this parameter to specify the member accounts for which you want to return Auto Scaling group recommendations. Only one account ID can be specified per request.
        public let accountIds: [String]?
        /// The Amazon Resource Name (ARN) of the Auto Scaling groups for which to return recommendations.
        public let autoScalingGroupArns: [String]?
        /// An array of objects that describe a filter that returns a more specific list of Auto Scaling group recommendations.
        public let filters: [Filter]?
        /// The maximum number of Auto Scaling group recommendations to return with a single request. To retrieve the remaining results, make another request with the returned NextToken value.
        public let maxResults: Int?
        /// The token to advance to the next page of Auto Scaling group recommendations.
        public let nextToken: String?

        public init(accountIds: [String]? = nil, autoScalingGroupArns: [String]? = nil, filters: [Filter]? = nil, maxResults: Int? = nil, nextToken: String? = nil) {
            self.accountIds = accountIds
            self.autoScalingGroupArns = autoScalingGroupArns
            self.filters = filters
            self.maxResults = maxResults
            self.nextToken = nextToken
        }

        private enum CodingKeys: String, CodingKey {
            case accountIds
            case autoScalingGroupArns
            case filters
            case maxResults
            case nextToken
        }
    }

    public struct GetAutoScalingGroupRecommendationsResponse: AWSDecodableShape {
        /// An array of objects that describe Auto Scaling group recommendations.
        public let autoScalingGroupRecommendations: [AutoScalingGroupRecommendation]?
        /// An array of objects that describe errors of the request. For example, an error is returned if you request recommendations for an unsupported Auto Scaling group.
        public let errors: [GetRecommendationError]?
        /// The token to use to advance to the next page of Auto Scaling group recommendations. This value is null when there are no more pages of Auto Scaling group recommendations to return.
        public let nextToken: String?

        public init(autoScalingGroupRecommendations: [AutoScalingGroupRecommendation]? = nil, errors: [GetRecommendationError]? = nil, nextToken: String? = nil) {
            self.autoScalingGroupRecommendations = autoScalingGroupRecommendations
            self.errors = errors
            self.nextToken = nextToken
        }

        private enum CodingKeys: String, CodingKey {
            case autoScalingGroupRecommendations
            case errors
            case nextToken
        }
    }

    public struct GetEC2InstanceRecommendationsRequest: AWSEncodableShape {
        /// The IDs of the AWS accounts for which to return instance recommendations. If your account is the master account of an organization, use this parameter to specify the member accounts for which you want to return instance recommendations. Only one account ID can be specified per request.
        public let accountIds: [String]?
        /// An array of objects that describe a filter that returns a more specific list of instance recommendations.
        public let filters: [Filter]?
        /// The Amazon Resource Name (ARN) of the instances for which to return recommendations.
        public let instanceArns: [String]?
        /// The maximum number of instance recommendations to return with a single request. To retrieve the remaining results, make another request with the returned NextToken value.
        public let maxResults: Int?
        /// The token to advance to the next page of instance recommendations.
        public let nextToken: String?

        public init(accountIds: [String]? = nil, filters: [Filter]? = nil, instanceArns: [String]? = nil, maxResults: Int? = nil, nextToken: String? = nil) {
            self.accountIds = accountIds
            self.filters = filters
            self.instanceArns = instanceArns
            self.maxResults = maxResults
            self.nextToken = nextToken
        }

        private enum CodingKeys: String, CodingKey {
            case accountIds
            case filters
            case instanceArns
            case maxResults
            case nextToken
        }
    }

    public struct GetEC2InstanceRecommendationsResponse: AWSDecodableShape {
        /// An array of objects that describe errors of the request. For example, an error is returned if you request recommendations for an instance of an unsupported instance family.
        public let errors: [GetRecommendationError]?
        /// An array of objects that describe instance recommendations.
        public let instanceRecommendations: [InstanceRecommendation]?
        /// The token to use to advance to the next page of instance recommendations. This value is null when there are no more pages of instance recommendations to return.
        public let nextToken: String?

        public init(errors: [GetRecommendationError]? = nil, instanceRecommendations: [InstanceRecommendation]? = nil, nextToken: String? = nil) {
            self.errors = errors
            self.instanceRecommendations = instanceRecommendations
            self.nextToken = nextToken
        }

        private enum CodingKeys: String, CodingKey {
            case errors
            case instanceRecommendations
            case nextToken
        }
    }

    public struct GetEC2RecommendationProjectedMetricsRequest: AWSEncodableShape {
        /// The time stamp of the last projected metrics data point to return.
        public let endTime: TimeStamp
        /// The Amazon Resource Name (ARN) of the instances for which to return recommendation projected metrics.
        public let instanceArn: String
        /// The granularity, in seconds, of the projected metrics data points.
        public let period: Int
        /// The time stamp of the first projected metrics data point to return.
        public let startTime: TimeStamp
        /// The statistic of the projected metrics.
        public let stat: MetricStatistic

        public init(endTime: TimeStamp, instanceArn: String, period: Int, startTime: TimeStamp, stat: MetricStatistic) {
            self.endTime = endTime
            self.instanceArn = instanceArn
            self.period = period
            self.startTime = startTime
            self.stat = stat
        }

        private enum CodingKeys: String, CodingKey {
            case endTime
            case instanceArn
            case period
            case startTime
            case stat
        }
    }

    public struct GetEC2RecommendationProjectedMetricsResponse: AWSDecodableShape {
        /// An array of objects that describe a projected metrics.
        public let recommendedOptionProjectedMetrics: [RecommendedOptionProjectedMetric]?

        public init(recommendedOptionProjectedMetrics: [RecommendedOptionProjectedMetric]? = nil) {
            self.recommendedOptionProjectedMetrics = recommendedOptionProjectedMetrics
        }

        private enum CodingKeys: String, CodingKey {
            case recommendedOptionProjectedMetrics
        }
    }

    public struct GetEnrollmentStatusRequest: AWSEncodableShape {
        public init() {}
    }

    public struct GetEnrollmentStatusResponse: AWSDecodableShape {
        /// Confirms the enrollment status of member accounts within the organization, if the account is a master account of an organization.
        public let memberAccountsEnrolled: Bool?
        /// The enrollment status of the account.
        public let status: Status?
        /// The reason for the enrollment status of the account. For example, an account might show a status of Pending because member accounts of an organization require more time to be enrolled in the service.
        public let statusReason: String?

        public init(memberAccountsEnrolled: Bool? = nil, status: Status? = nil, statusReason: String? = nil) {
            self.memberAccountsEnrolled = memberAccountsEnrolled
            self.status = status
            self.statusReason = statusReason
        }

        private enum CodingKeys: String, CodingKey {
            case memberAccountsEnrolled
            case status
            case statusReason
        }
    }

    public struct GetRecommendationError: AWSDecodableShape {
        /// The error code.
        public let code: String?
        /// The ID of the error.
        public let identifier: String?
        /// The message, or reason, for the error.
        public let message: String?

        public init(code: String? = nil, identifier: String? = nil, message: String? = nil) {
            self.code = code
            self.identifier = identifier
            self.message = message
        }

        private enum CodingKeys: String, CodingKey {
            case code
            case identifier
            case message
        }
    }

    public struct GetRecommendationSummariesRequest: AWSEncodableShape {
        /// The IDs of the AWS accounts for which to return recommendation summaries. If your account is the master account of an organization, use this parameter to specify the member accounts for which you want to return recommendation summaries. Only one account ID can be specified per request.
        public let accountIds: [String]?
        /// The maximum number of recommendation summaries to return with a single request. To retrieve the remaining results, make another request with the returned NextToken value.
        public let maxResults: Int?
        /// The token to advance to the next page of recommendation summaries.
        public let nextToken: String?

        public init(accountIds: [String]? = nil, maxResults: Int? = nil, nextToken: String? = nil) {
            self.accountIds = accountIds
            self.maxResults = maxResults
            self.nextToken = nextToken
        }

        private enum CodingKeys: String, CodingKey {
            case accountIds
            case maxResults
            case nextToken
        }
    }

    public struct GetRecommendationSummariesResponse: AWSDecodableShape {
        /// The token to use to advance to the next page of recommendation summaries. This value is null when there are no more pages of recommendation summaries to return.
        public let nextToken: String?
        /// An array of objects that summarize a recommendation.
        public let recommendationSummaries: [RecommendationSummary]?

        public init(nextToken: String? = nil, recommendationSummaries: [RecommendationSummary]? = nil) {
            self.nextToken = nextToken
            self.recommendationSummaries = recommendationSummaries
        }

        private enum CodingKeys: String, CodingKey {
            case nextToken
            case recommendationSummaries
        }
    }

    public struct InstanceRecommendation: AWSDecodableShape {
        /// The AWS account ID of the instance.
        public let accountId: String?
        /// The instance type of the current instance.
        public let currentInstanceType: String?
        /// The finding classification for the instance. Findings for instances include:     Underprovisioned —An instance is considered under-provisioned when at least one specification of your instance, such as CPU, memory, or network, does not meet the performance requirements of your workload. Under-provisioned instances may lead to poor application performance.     Overprovisioned —An instance is considered over-provisioned when at least one specification of your instance, such as CPU, memory, or network, can be sized down while still meeting the performance requirements of your workload, and no specification is under-provisioned. Over-provisioned instances may lead to unnecessary infrastructure cost.     Optimized —An instance is considered optimized when all specifications of your instance, such as CPU, memory, and network, meet the performance requirements of your workload and is not over provisioned. An optimized instance runs your workloads with optimal performance and infrastructure cost. For optimized resources, AWS Compute Optimizer might recommend a new generation instance type.    The values that are returned might be UNDER_PROVISIONED, OVER_PROVISIONED, or OPTIMIZED.
        public let finding: Finding?
        /// The Amazon Resource Name (ARN) of the current instance.
        public let instanceArn: String?
        /// The name of the current instance.
        public let instanceName: String?
        /// The time stamp of when the instance recommendation was last refreshed.
        public let lastRefreshTimestamp: TimeStamp?
        /// The number of days for which utilization metrics were analyzed for the instance.
        public let lookBackPeriodInDays: Double?
        /// An array of objects that describe the recommendation options for the instance.
        public let recommendationOptions: [InstanceRecommendationOption]?
        /// An array of objects that describe the source resource of the recommendation.
        public let recommendationSources: [RecommendationSource]?
        /// An array of objects that describe the utilization metrics of the instance.
        public let utilizationMetrics: [UtilizationMetric]?

        public init(accountId: String? = nil, currentInstanceType: String? = nil, finding: Finding? = nil, instanceArn: String? = nil, instanceName: String? = nil, lastRefreshTimestamp: TimeStamp? = nil, lookBackPeriodInDays: Double? = nil, recommendationOptions: [InstanceRecommendationOption]? = nil, recommendationSources: [RecommendationSource]? = nil, utilizationMetrics: [UtilizationMetric]? = nil) {
            self.accountId = accountId
            self.currentInstanceType = currentInstanceType
            self.finding = finding
            self.instanceArn = instanceArn
            self.instanceName = instanceName
            self.lastRefreshTimestamp = lastRefreshTimestamp
            self.lookBackPeriodInDays = lookBackPeriodInDays
            self.recommendationOptions = recommendationOptions
            self.recommendationSources = recommendationSources
            self.utilizationMetrics = utilizationMetrics
        }

        private enum CodingKeys: String, CodingKey {
            case accountId
            case currentInstanceType
            case finding
            case instanceArn
            case instanceName
            case lastRefreshTimestamp
            case lookBackPeriodInDays
            case recommendationOptions
            case recommendationSources
            case utilizationMetrics
        }
    }

    public struct InstanceRecommendationOption: AWSDecodableShape {
        /// The instance type of the instance recommendation.
        public let instanceType: String?
        /// The performance risk of the instance recommendation option. Performance risk is the likelihood of the recommended instance type not meeting the performance requirement of your workload. The lowest performance risk is categorized as 0, and the highest as 5.
        public let performanceRisk: Double?
        /// An array of objects that describe the projected utilization metrics of the instance recommendation option.
        public let projectedUtilizationMetrics: [UtilizationMetric]?
        /// The rank of the instance recommendation option. The top recommendation option is ranked as 1.
        public let rank: Int?

        public init(instanceType: String? = nil, performanceRisk: Double? = nil, projectedUtilizationMetrics: [UtilizationMetric]? = nil, rank: Int? = nil) {
            self.instanceType = instanceType
            self.performanceRisk = performanceRisk
            self.projectedUtilizationMetrics = projectedUtilizationMetrics
            self.rank = rank
        }

        private enum CodingKeys: String, CodingKey {
            case instanceType
            case performanceRisk
            case projectedUtilizationMetrics
            case rank
        }
    }

    public struct JobFilter: AWSEncodableShape {
        /// The name of the filter. Specify ResourceType to return export jobs of a specific resource type (e.g., Ec2Instance). Specify JobStatus to return export jobs with a specific status (e.g, Complete).
        public let name: JobFilterName?
        /// The value of the filter. If you specify the name parameter as ResourceType, the valid values are Ec2Instance or AutoScalingGroup. If you specify the name parameter as JobStatus, the valid values are Queued, InProgress, Complete, or Failed.
        public let values: [String]?

        public init(name: JobFilterName? = nil, values: [String]? = nil) {
            self.name = name
            self.values = values
        }

        private enum CodingKeys: String, CodingKey {
            case name
            case values
        }
    }

    public struct ProjectedMetric: AWSDecodableShape {
        /// The name of the projected utilization metric.  Memory metrics are only returned for resources that have the unified CloudWatch agent installed on them. For more information, see Enabling Memory Utilization with the CloudWatch Agent.
        public let name: MetricName?
        /// The time stamps of the projected utilization metric.
        public let timestamps: [TimeStamp]?
        /// The values of the projected utilization metrics.
        public let values: [Double]?

        public init(name: MetricName? = nil, timestamps: [TimeStamp]? = nil, values: [Double]? = nil) {
            self.name = name
            self.timestamps = timestamps
            self.values = values
        }

        private enum CodingKeys: String, CodingKey {
            case name
            case timestamps
            case values
        }
    }

    public struct RecommendationExportJob: AWSDecodableShape {
        /// The timestamp of when the export job was created.
        public let creationTimestamp: TimeStamp?
        /// An object that describes the destination of the export file.
        public let destination: ExportDestination?
        /// The reason for an export job failure.
        public let failureReason: String?
        /// The identification number of the export job.
        public let jobId: String?
        /// The timestamp of when the export job was last updated.
        public let lastUpdatedTimestamp: TimeStamp?
        /// The resource type of the exported recommendations.
        public let resourceType: ResourceType?
        /// The status of the export job.
        public let status: JobStatus?

        public init(creationTimestamp: TimeStamp? = nil, destination: ExportDestination? = nil, failureReason: String? = nil, jobId: String? = nil, lastUpdatedTimestamp: TimeStamp? = nil, resourceType: ResourceType? = nil, status: JobStatus? = nil) {
            self.creationTimestamp = creationTimestamp
            self.destination = destination
            self.failureReason = failureReason
            self.jobId = jobId
            self.lastUpdatedTimestamp = lastUpdatedTimestamp
            self.resourceType = resourceType
            self.status = status
        }

        private enum CodingKeys: String, CodingKey {
            case creationTimestamp
            case destination
            case failureReason
            case jobId
            case lastUpdatedTimestamp
            case resourceType
            case status
        }
    }

    public struct RecommendationSource: AWSDecodableShape {
        /// The Amazon Resource Name (ARN) of the recommendation source.
        public let recommendationSourceArn: String?
        /// The resource type of the recommendation source.
        public let recommendationSourceType: RecommendationSourceType?

        public init(recommendationSourceArn: String? = nil, recommendationSourceType: RecommendationSourceType? = nil) {
            self.recommendationSourceArn = recommendationSourceArn
            self.recommendationSourceType = recommendationSourceType
        }

        private enum CodingKeys: String, CodingKey {
            case recommendationSourceArn
            case recommendationSourceType
        }
    }

    public struct RecommendationSummary: AWSDecodableShape {
        /// The AWS account ID of the recommendation summary.
        public let accountId: String?
        /// The resource type of the recommendation.
        public let recommendationResourceType: RecommendationSourceType?
        /// An array of objects that describe a recommendation summary.
        public let summaries: [Summary]?

        public init(accountId: String? = nil, recommendationResourceType: RecommendationSourceType? = nil, summaries: [Summary]? = nil) {
            self.accountId = accountId
            self.recommendationResourceType = recommendationResourceType
            self.summaries = summaries
        }

        private enum CodingKeys: String, CodingKey {
            case accountId
            case recommendationResourceType
            case summaries
        }
    }

    public struct RecommendedOptionProjectedMetric: AWSDecodableShape {
        /// An array of objects that describe a projected utilization metric.
        public let projectedMetrics: [ProjectedMetric]?
        /// The rank of the recommendation option projected metric. The top recommendation option is ranked as 1. The projected metric rank correlates to the recommendation option rank. For example, the projected metric ranked as 1 is related to the recommendation option that is also ranked as 1 in the same response.
        public let rank: Int?
        /// The recommended instance type.
        public let recommendedInstanceType: String?

        public init(projectedMetrics: [ProjectedMetric]? = nil, rank: Int? = nil, recommendedInstanceType: String? = nil) {
            self.projectedMetrics = projectedMetrics
            self.rank = rank
            self.recommendedInstanceType = recommendedInstanceType
        }

        private enum CodingKeys: String, CodingKey {
            case projectedMetrics
            case rank
            case recommendedInstanceType
        }
    }

    public struct S3Destination: AWSDecodableShape {
        /// The name of the Amazon S3 bucket used as the destination of an export file.
        public let bucket: String?
        /// The Amazon S3 bucket key of an export file. The key uniquely identifies the object, or export file, in the S3 bucket.
        public let key: String?
        /// The Amazon S3 bucket key of a metadata file. The key uniquely identifies the object, or metadata file, in the S3 bucket.
        public let metadataKey: String?

        public init(bucket: String? = nil, key: String? = nil, metadataKey: String? = nil) {
            self.bucket = bucket
            self.key = key
            self.metadataKey = metadataKey
        }

        private enum CodingKeys: String, CodingKey {
            case bucket
            case key
            case metadataKey
        }
    }

    public struct S3DestinationConfig: AWSEncodableShape {
        /// The name of the Amazon S3 bucket to use as the destination for an export job.
        public let bucket: String?
        /// The Amazon S3 bucket prefix for an export job.
        public let keyPrefix: String?

        public init(bucket: String? = nil, keyPrefix: String? = nil) {
            self.bucket = bucket
            self.keyPrefix = keyPrefix
        }

        private enum CodingKeys: String, CodingKey {
            case bucket
            case keyPrefix
        }
    }

    public struct Summary: AWSDecodableShape {
        /// The finding classification of the recommendation.
        public let name: Finding?
        /// The value of the recommendation summary.
        public let value: Double?

        public init(name: Finding? = nil, value: Double? = nil) {
            self.name = name
            self.value = value
        }

        private enum CodingKeys: String, CodingKey {
            case name
            case value
        }
    }

    public struct UpdateEnrollmentStatusRequest: AWSEncodableShape {
        /// Indicates whether to enroll member accounts of the organization if the your account is the master account of an organization.
        public let includeMemberAccounts: Bool?
        /// The new enrollment status of the account. Accepted options are Active or Inactive. You will get an error if Pending or Failed are specified.
        public let status: Status

        public init(includeMemberAccounts: Bool? = nil, status: Status) {
            self.includeMemberAccounts = includeMemberAccounts
            self.status = status
        }

        private enum CodingKeys: String, CodingKey {
            case includeMemberAccounts
            case status
        }
    }

    public struct UpdateEnrollmentStatusResponse: AWSDecodableShape {
        /// The enrollment status of the account.
        public let status: Status?
        /// The reason for the enrollment status of the account. For example, an account might show a status of Pending because member accounts of an organization require more time to be enrolled in the service.
        public let statusReason: String?

        public init(status: Status? = nil, statusReason: String? = nil) {
            self.status = status
            self.statusReason = statusReason
        }

        private enum CodingKeys: String, CodingKey {
            case status
            case statusReason
        }
    }

    public struct UtilizationMetric: AWSDecodableShape {
        /// The name of the utilization metric.  Memory metrics are only returned for resources that have the unified CloudWatch agent installed on them. For more information, see Enabling Memory Utilization with the CloudWatch Agent.
        public let name: MetricName?
        /// The statistic of the utilization metric.
        public let statistic: MetricStatistic?
        /// The value of the utilization metric.
        public let value: Double?

        public init(name: MetricName? = nil, statistic: MetricStatistic? = nil, value: Double? = nil) {
            self.name = name
            self.statistic = statistic
            self.value = value
        }

        private enum CodingKeys: String, CodingKey {
            case name
            case statistic
            case value
        }
    }
}
