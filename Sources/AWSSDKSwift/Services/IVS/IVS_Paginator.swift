// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/aws-sdk-swift/blob/master/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import NIO

//MARK: Paginators

extension IVS {

    ///  Gets summary information about all channels in your account, in the AWS region where the API request is processed. This list can be filtered to match a specified string.
    public func listChannelsPaginator(_ input: ListChannelsRequest, onPage: @escaping (ListChannelsResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listChannels, tokenKey: \ListChannelsResponse.nextToken, onPage: onPage)
    }

    ///  Gets summary information about playback key pairs.
    public func listPlaybackKeyPairsPaginator(_ input: ListPlaybackKeyPairsRequest, onPage: @escaping (ListPlaybackKeyPairsResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listPlaybackKeyPairs, tokenKey: \ListPlaybackKeyPairsResponse.nextToken, onPage: onPage)
    }

    ///  Gets summary information about stream keys for the specified channel.
    public func listStreamKeysPaginator(_ input: ListStreamKeysRequest, onPage: @escaping (ListStreamKeysResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listStreamKeys, tokenKey: \ListStreamKeysResponse.nextToken, onPage: onPage)
    }

    ///  Gets summary information about live streams in your account, in the AWS region where the API request is processed.
    public func listStreamsPaginator(_ input: ListStreamsRequest, onPage: @escaping (ListStreamsResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listStreams, tokenKey: \ListStreamsResponse.nextToken, onPage: onPage)
    }

    ///  Gets information about AWS tags for the specified ARN.
    public func listTagsForResourcePaginator(_ input: ListTagsForResourceRequest, onPage: @escaping (ListTagsForResourceResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listTagsForResource, tokenKey: \ListTagsForResourceResponse.nextToken, onPage: onPage)
    }

}

extension IVS.ListChannelsRequest: AWSPaginateStringToken {
    public func usingPaginationToken(_ token: String) -> IVS.ListChannelsRequest {
        return .init(
            filterByName: self.filterByName, 
            maxResults: self.maxResults, 
            nextToken: token
        )

    }
}

extension IVS.ListPlaybackKeyPairsRequest: AWSPaginateStringToken {
    public func usingPaginationToken(_ token: String) -> IVS.ListPlaybackKeyPairsRequest {
        return .init(
            maxResults: self.maxResults, 
            nextToken: token
        )

    }
}

extension IVS.ListStreamKeysRequest: AWSPaginateStringToken {
    public func usingPaginationToken(_ token: String) -> IVS.ListStreamKeysRequest {
        return .init(
            channelArn: self.channelArn, 
            maxResults: self.maxResults, 
            nextToken: token
        )

    }
}

extension IVS.ListStreamsRequest: AWSPaginateStringToken {
    public func usingPaginationToken(_ token: String) -> IVS.ListStreamsRequest {
        return .init(
            maxResults: self.maxResults, 
            nextToken: token
        )

    }
}

extension IVS.ListTagsForResourceRequest: AWSPaginateStringToken {
    public func usingPaginationToken(_ token: String) -> IVS.ListTagsForResourceRequest {
        return .init(
            maxResults: self.maxResults, 
            nextToken: token, 
            resourceArn: self.resourceArn
        )

    }
}


