// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/aws-sdk-swift/blob/master/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import Foundation
import AWSSDKSwiftCore

extension ApiGatewayManagementApi {
    //MARK: Enums

    //MARK: Shapes

    public struct DeleteConnectionRequest: AWSShape {
        public static var _encoding = [
            AWSMemberEncoding(label: "connectionId", location: .uri(locationName: "connectionId"))
        ]

        public let connectionId: String

        public init(connectionId: String) {
            self.connectionId = connectionId
        }

        private enum CodingKeys: String, CodingKey {
            case connectionId = "connectionId"
        }
    }

    public struct GetConnectionRequest: AWSShape {
        public static var _encoding = [
            AWSMemberEncoding(label: "connectionId", location: .uri(locationName: "connectionId"))
        ]

        public let connectionId: String

        public init(connectionId: String) {
            self.connectionId = connectionId
        }

        private enum CodingKeys: String, CodingKey {
            case connectionId = "connectionId"
        }
    }

    public struct GetConnectionResponse: AWSShape {

        public let connectedAt: TimeStamp?
        public let identity: Identity?
        public let lastActiveAt: TimeStamp?

        public init(connectedAt: TimeStamp? = nil, identity: Identity? = nil, lastActiveAt: TimeStamp? = nil) {
            self.connectedAt = connectedAt
            self.identity = identity
            self.lastActiveAt = lastActiveAt
        }

        private enum CodingKeys: String, CodingKey {
            case connectedAt = "connectedAt"
            case identity = "identity"
            case lastActiveAt = "lastActiveAt"
        }
    }

    public struct Identity: AWSShape {

        /// The source IP address of the TCP connection making the request to API Gateway.
        public let sourceIp: String
        /// The User Agent of the API caller.
        public let userAgent: String

        public init(sourceIp: String, userAgent: String) {
            self.sourceIp = sourceIp
            self.userAgent = userAgent
        }

        private enum CodingKeys: String, CodingKey {
            case sourceIp = "sourceIp"
            case userAgent = "userAgent"
        }
    }

    public struct PostToConnectionRequest: AWSShape {
        /// The key for the payload
        public static let payloadPath: String? = "data"
        public static var _encoding = [
            AWSMemberEncoding(label: "connectionId", location: .uri(locationName: "connectionId")), 
            AWSMemberEncoding(label: "data", location: .body(locationName: "Data"), encoding: .blob)
        ]

        public let connectionId: String
        public let data: Data

        public init(connectionId: String, data: Data) {
            self.connectionId = connectionId
            self.data = data
        }

        public func validate(name: String) throws {
            try validate(self.data, name:"data", parent: name, max: 131072)
        }

        private enum CodingKeys: String, CodingKey {
            case connectionId = "connectionId"
            case data = "Data"
        }
    }
}
