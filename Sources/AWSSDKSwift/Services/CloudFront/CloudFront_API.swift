// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/aws-sdk-swift/blob/master/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import Foundation
import AWSSDKSwiftCore
import NIO

/**
Amazon CloudFront This is the Amazon CloudFront API Reference. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the Amazon CloudFront Developer Guide.
*/
public struct CloudFront {

    public let client: AWSClient

    public init(accessKeyId: String? = nil, secretAccessKey: String? = nil, sessionToken: String? = nil, region: AWSSDKSwiftCore.Region? = nil, endpoint: String? = nil, middlewares: [AWSServiceMiddleware] = [], eventLoopGroupProvider: AWSClient.EventLoopGroupProvider) {
        self.client = AWSClient(
            accessKeyId: accessKeyId,
            secretAccessKey: secretAccessKey,
            sessionToken: sessionToken,
            region: region,
            service: "cloudfront",
            serviceProtocol: ServiceProtocol(type: .restxml),
            apiVersion: "2019-03-26",
            endpoint: endpoint,
            serviceEndpoints: ["aws-global": "cloudfront.amazonaws.com"],
            partitionEndpoint: "aws-global",
            middlewares: middlewares,
            possibleErrorTypes: [CloudFrontErrorType.self],
            eventLoopGroupProvider: eventLoopGroupProvider
        )
    }

    public func createCloudFrontOriginAccessIdentity20190326(_ input: CreateCloudFrontOriginAccessIdentityRequest) -> Future<CreateCloudFrontOriginAccessIdentityResult> {
        return client.send(operation: "CreateCloudFrontOriginAccessIdentity2019_03_26", path: "/2019-03-26/origin-access-identity/cloudfront", httpMethod: "POST", input: input)
    }

    public func createDistribution20190326(_ input: CreateDistributionRequest) -> Future<CreateDistributionResult> {
        return client.send(operation: "CreateDistribution2019_03_26", path: "/2019-03-26/distribution", httpMethod: "POST", input: input)
    }

    public func createDistributionWithTags20190326(_ input: CreateDistributionWithTagsRequest) -> Future<CreateDistributionWithTagsResult> {
        return client.send(operation: "CreateDistributionWithTags2019_03_26", path: "/2019-03-26/distribution?WithTags", httpMethod: "POST", input: input)
    }

    public func createFieldLevelEncryptionConfig20190326(_ input: CreateFieldLevelEncryptionConfigRequest) -> Future<CreateFieldLevelEncryptionConfigResult> {
        return client.send(operation: "CreateFieldLevelEncryptionConfig2019_03_26", path: "/2019-03-26/field-level-encryption", httpMethod: "POST", input: input)
    }

    public func createFieldLevelEncryptionProfile20190326(_ input: CreateFieldLevelEncryptionProfileRequest) -> Future<CreateFieldLevelEncryptionProfileResult> {
        return client.send(operation: "CreateFieldLevelEncryptionProfile2019_03_26", path: "/2019-03-26/field-level-encryption-profile", httpMethod: "POST", input: input)
    }

    public func createInvalidation20190326(_ input: CreateInvalidationRequest) -> Future<CreateInvalidationResult> {
        return client.send(operation: "CreateInvalidation2019_03_26", path: "/2019-03-26/distribution/{DistributionId}/invalidation", httpMethod: "POST", input: input)
    }

    public func createPublicKey20190326(_ input: CreatePublicKeyRequest) -> Future<CreatePublicKeyResult> {
        return client.send(operation: "CreatePublicKey2019_03_26", path: "/2019-03-26/public-key", httpMethod: "POST", input: input)
    }

    public func createStreamingDistribution20190326(_ input: CreateStreamingDistributionRequest) -> Future<CreateStreamingDistributionResult> {
        return client.send(operation: "CreateStreamingDistribution2019_03_26", path: "/2019-03-26/streaming-distribution", httpMethod: "POST", input: input)
    }

    public func createStreamingDistributionWithTags20190326(_ input: CreateStreamingDistributionWithTagsRequest) -> Future<CreateStreamingDistributionWithTagsResult> {
        return client.send(operation: "CreateStreamingDistributionWithTags2019_03_26", path: "/2019-03-26/streaming-distribution?WithTags", httpMethod: "POST", input: input)
    }

    @discardableResult public func deleteCloudFrontOriginAccessIdentity20190326(_ input: DeleteCloudFrontOriginAccessIdentityRequest) -> Future<Void> {
        return client.send(operation: "DeleteCloudFrontOriginAccessIdentity2019_03_26", path: "/2019-03-26/origin-access-identity/cloudfront/{Id}", httpMethod: "DELETE", input: input)
    }

    @discardableResult public func deleteDistribution20190326(_ input: DeleteDistributionRequest) -> Future<Void> {
        return client.send(operation: "DeleteDistribution2019_03_26", path: "/2019-03-26/distribution/{Id}", httpMethod: "DELETE", input: input)
    }

    @discardableResult public func deleteFieldLevelEncryptionConfig20190326(_ input: DeleteFieldLevelEncryptionConfigRequest) -> Future<Void> {
        return client.send(operation: "DeleteFieldLevelEncryptionConfig2019_03_26", path: "/2019-03-26/field-level-encryption/{Id}", httpMethod: "DELETE", input: input)
    }

    @discardableResult public func deleteFieldLevelEncryptionProfile20190326(_ input: DeleteFieldLevelEncryptionProfileRequest) -> Future<Void> {
        return client.send(operation: "DeleteFieldLevelEncryptionProfile2019_03_26", path: "/2019-03-26/field-level-encryption-profile/{Id}", httpMethod: "DELETE", input: input)
    }

    @discardableResult public func deletePublicKey20190326(_ input: DeletePublicKeyRequest) -> Future<Void> {
        return client.send(operation: "DeletePublicKey2019_03_26", path: "/2019-03-26/public-key/{Id}", httpMethod: "DELETE", input: input)
    }

    @discardableResult public func deleteStreamingDistribution20190326(_ input: DeleteStreamingDistributionRequest) -> Future<Void> {
        return client.send(operation: "DeleteStreamingDistribution2019_03_26", path: "/2019-03-26/streaming-distribution/{Id}", httpMethod: "DELETE", input: input)
    }

    public func getCloudFrontOriginAccessIdentity20190326(_ input: GetCloudFrontOriginAccessIdentityRequest) -> Future<GetCloudFrontOriginAccessIdentityResult> {
        return client.send(operation: "GetCloudFrontOriginAccessIdentity2019_03_26", path: "/2019-03-26/origin-access-identity/cloudfront/{Id}", httpMethod: "GET", input: input)
    }

    public func getCloudFrontOriginAccessIdentityConfig20190326(_ input: GetCloudFrontOriginAccessIdentityConfigRequest) -> Future<GetCloudFrontOriginAccessIdentityConfigResult> {
        return client.send(operation: "GetCloudFrontOriginAccessIdentityConfig2019_03_26", path: "/2019-03-26/origin-access-identity/cloudfront/{Id}/config", httpMethod: "GET", input: input)
    }

    public func getDistribution20190326(_ input: GetDistributionRequest) -> Future<GetDistributionResult> {
        return client.send(operation: "GetDistribution2019_03_26", path: "/2019-03-26/distribution/{Id}", httpMethod: "GET", input: input)
    }

    public func getDistributionConfig20190326(_ input: GetDistributionConfigRequest) -> Future<GetDistributionConfigResult> {
        return client.send(operation: "GetDistributionConfig2019_03_26", path: "/2019-03-26/distribution/{Id}/config", httpMethod: "GET", input: input)
    }

    public func getFieldLevelEncryption20190326(_ input: GetFieldLevelEncryptionRequest) -> Future<GetFieldLevelEncryptionResult> {
        return client.send(operation: "GetFieldLevelEncryption2019_03_26", path: "/2019-03-26/field-level-encryption/{Id}", httpMethod: "GET", input: input)
    }

    public func getFieldLevelEncryptionConfig20190326(_ input: GetFieldLevelEncryptionConfigRequest) -> Future<GetFieldLevelEncryptionConfigResult> {
        return client.send(operation: "GetFieldLevelEncryptionConfig2019_03_26", path: "/2019-03-26/field-level-encryption/{Id}/config", httpMethod: "GET", input: input)
    }

    public func getFieldLevelEncryptionProfile20190326(_ input: GetFieldLevelEncryptionProfileRequest) -> Future<GetFieldLevelEncryptionProfileResult> {
        return client.send(operation: "GetFieldLevelEncryptionProfile2019_03_26", path: "/2019-03-26/field-level-encryption-profile/{Id}", httpMethod: "GET", input: input)
    }

    public func getFieldLevelEncryptionProfileConfig20190326(_ input: GetFieldLevelEncryptionProfileConfigRequest) -> Future<GetFieldLevelEncryptionProfileConfigResult> {
        return client.send(operation: "GetFieldLevelEncryptionProfileConfig2019_03_26", path: "/2019-03-26/field-level-encryption-profile/{Id}/config", httpMethod: "GET", input: input)
    }

    public func getInvalidation20190326(_ input: GetInvalidationRequest) -> Future<GetInvalidationResult> {
        return client.send(operation: "GetInvalidation2019_03_26", path: "/2019-03-26/distribution/{DistributionId}/invalidation/{Id}", httpMethod: "GET", input: input)
    }

    public func getPublicKey20190326(_ input: GetPublicKeyRequest) -> Future<GetPublicKeyResult> {
        return client.send(operation: "GetPublicKey2019_03_26", path: "/2019-03-26/public-key/{Id}", httpMethod: "GET", input: input)
    }

    public func getPublicKeyConfig20190326(_ input: GetPublicKeyConfigRequest) -> Future<GetPublicKeyConfigResult> {
        return client.send(operation: "GetPublicKeyConfig2019_03_26", path: "/2019-03-26/public-key/{Id}/config", httpMethod: "GET", input: input)
    }

    public func getStreamingDistribution20190326(_ input: GetStreamingDistributionRequest) -> Future<GetStreamingDistributionResult> {
        return client.send(operation: "GetStreamingDistribution2019_03_26", path: "/2019-03-26/streaming-distribution/{Id}", httpMethod: "GET", input: input)
    }

    public func getStreamingDistributionConfig20190326(_ input: GetStreamingDistributionConfigRequest) -> Future<GetStreamingDistributionConfigResult> {
        return client.send(operation: "GetStreamingDistributionConfig2019_03_26", path: "/2019-03-26/streaming-distribution/{Id}/config", httpMethod: "GET", input: input)
    }

    public func listCloudFrontOriginAccessIdentities20190326(_ input: ListCloudFrontOriginAccessIdentitiesRequest) -> Future<ListCloudFrontOriginAccessIdentitiesResult> {
        return client.send(operation: "ListCloudFrontOriginAccessIdentities2019_03_26", path: "/2019-03-26/origin-access-identity/cloudfront", httpMethod: "GET", input: input)
    }

    public func listDistributions20190326(_ input: ListDistributionsRequest) -> Future<ListDistributionsResult> {
        return client.send(operation: "ListDistributions2019_03_26", path: "/2019-03-26/distribution", httpMethod: "GET", input: input)
    }

    public func listDistributionsByWebACLId20190326(_ input: ListDistributionsByWebACLIdRequest) -> Future<ListDistributionsByWebACLIdResult> {
        return client.send(operation: "ListDistributionsByWebACLId2019_03_26", path: "/2019-03-26/distributionsByWebACLId/{WebACLId}", httpMethod: "GET", input: input)
    }

    public func listFieldLevelEncryptionConfigs20190326(_ input: ListFieldLevelEncryptionConfigsRequest) -> Future<ListFieldLevelEncryptionConfigsResult> {
        return client.send(operation: "ListFieldLevelEncryptionConfigs2019_03_26", path: "/2019-03-26/field-level-encryption", httpMethod: "GET", input: input)
    }

    public func listFieldLevelEncryptionProfiles20190326(_ input: ListFieldLevelEncryptionProfilesRequest) -> Future<ListFieldLevelEncryptionProfilesResult> {
        return client.send(operation: "ListFieldLevelEncryptionProfiles2019_03_26", path: "/2019-03-26/field-level-encryption-profile", httpMethod: "GET", input: input)
    }

    public func listInvalidations20190326(_ input: ListInvalidationsRequest) -> Future<ListInvalidationsResult> {
        return client.send(operation: "ListInvalidations2019_03_26", path: "/2019-03-26/distribution/{DistributionId}/invalidation", httpMethod: "GET", input: input)
    }

    public func listPublicKeys20190326(_ input: ListPublicKeysRequest) -> Future<ListPublicKeysResult> {
        return client.send(operation: "ListPublicKeys2019_03_26", path: "/2019-03-26/public-key", httpMethod: "GET", input: input)
    }

    public func listStreamingDistributions20190326(_ input: ListStreamingDistributionsRequest) -> Future<ListStreamingDistributionsResult> {
        return client.send(operation: "ListStreamingDistributions2019_03_26", path: "/2019-03-26/streaming-distribution", httpMethod: "GET", input: input)
    }

    public func listTagsForResource20190326(_ input: ListTagsForResourceRequest) -> Future<ListTagsForResourceResult> {
        return client.send(operation: "ListTagsForResource2019_03_26", path: "/2019-03-26/tagging", httpMethod: "GET", input: input)
    }

    @discardableResult public func tagResource20190326(_ input: TagResourceRequest) -> Future<Void> {
        return client.send(operation: "TagResource2019_03_26", path: "/2019-03-26/tagging?Operation=Tag", httpMethod: "POST", input: input)
    }

    @discardableResult public func untagResource20190326(_ input: UntagResourceRequest) -> Future<Void> {
        return client.send(operation: "UntagResource2019_03_26", path: "/2019-03-26/tagging?Operation=Untag", httpMethod: "POST", input: input)
    }

    public func updateCloudFrontOriginAccessIdentity20190326(_ input: UpdateCloudFrontOriginAccessIdentityRequest) -> Future<UpdateCloudFrontOriginAccessIdentityResult> {
        return client.send(operation: "UpdateCloudFrontOriginAccessIdentity2019_03_26", path: "/2019-03-26/origin-access-identity/cloudfront/{Id}/config", httpMethod: "PUT", input: input)
    }

    public func updateDistribution20190326(_ input: UpdateDistributionRequest) -> Future<UpdateDistributionResult> {
        return client.send(operation: "UpdateDistribution2019_03_26", path: "/2019-03-26/distribution/{Id}/config", httpMethod: "PUT", input: input)
    }

    public func updateFieldLevelEncryptionConfig20190326(_ input: UpdateFieldLevelEncryptionConfigRequest) -> Future<UpdateFieldLevelEncryptionConfigResult> {
        return client.send(operation: "UpdateFieldLevelEncryptionConfig2019_03_26", path: "/2019-03-26/field-level-encryption/{Id}/config", httpMethod: "PUT", input: input)
    }

    public func updateFieldLevelEncryptionProfile20190326(_ input: UpdateFieldLevelEncryptionProfileRequest) -> Future<UpdateFieldLevelEncryptionProfileResult> {
        return client.send(operation: "UpdateFieldLevelEncryptionProfile2019_03_26", path: "/2019-03-26/field-level-encryption-profile/{Id}/config", httpMethod: "PUT", input: input)
    }

    public func updatePublicKey20190326(_ input: UpdatePublicKeyRequest) -> Future<UpdatePublicKeyResult> {
        return client.send(operation: "UpdatePublicKey2019_03_26", path: "/2019-03-26/public-key/{Id}/config", httpMethod: "PUT", input: input)
    }

    public func updateStreamingDistribution20190326(_ input: UpdateStreamingDistributionRequest) -> Future<UpdateStreamingDistributionResult> {
        return client.send(operation: "UpdateStreamingDistribution2019_03_26", path: "/2019-03-26/streaming-distribution/{Id}/config", httpMethod: "PUT", input: input)
    }
}
