// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/aws-sdk-swift/blob/master/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import NIO

//MARK: Paginators

extension WorkSpaces {

    ///  Retrieves a list that describes the available WorkSpace bundles. You can filter the results using either bundle ID or owner, but not both.
    public func describeWorkspaceBundlesPaginator(_ input: DescribeWorkspaceBundlesRequest, onPage: @escaping (DescribeWorkspaceBundlesResult, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: describeWorkspaceBundles, tokenKey: \DescribeWorkspaceBundlesResult.nextToken, onPage: onPage)
    }

    ///  Describes the available directories that are registered with Amazon WorkSpaces.
    public func describeWorkspaceDirectoriesPaginator(_ input: DescribeWorkspaceDirectoriesRequest, onPage: @escaping (DescribeWorkspaceDirectoriesResult, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: describeWorkspaceDirectories, tokenKey: \DescribeWorkspaceDirectoriesResult.nextToken, onPage: onPage)
    }

    ///  Describes the specified WorkSpaces. You can filter the results by using the bundle identifier, directory identifier, or owner, but you can specify only one filter at a time.
    public func describeWorkspacesPaginator(_ input: DescribeWorkspacesRequest, onPage: @escaping (DescribeWorkspacesResult, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: describeWorkspaces, tokenKey: \DescribeWorkspacesResult.nextToken, onPage: onPage)
    }

}

extension WorkSpaces.DescribeWorkspaceBundlesRequest: AWSPaginateToken {
    public func usingPaginationToken(_ token: String) -> WorkSpaces.DescribeWorkspaceBundlesRequest {
        return .init(
            bundleIds: self.bundleIds, 
            nextToken: token, 
            owner: self.owner
        )

    }
}

extension WorkSpaces.DescribeWorkspaceDirectoriesRequest: AWSPaginateToken {
    public func usingPaginationToken(_ token: String) -> WorkSpaces.DescribeWorkspaceDirectoriesRequest {
        return .init(
            directoryIds: self.directoryIds, 
            limit: self.limit, 
            nextToken: token
        )

    }
}

extension WorkSpaces.DescribeWorkspacesRequest: AWSPaginateToken {
    public func usingPaginationToken(_ token: String) -> WorkSpaces.DescribeWorkspacesRequest {
        return .init(
            bundleId: self.bundleId, 
            directoryId: self.directoryId, 
            limit: self.limit, 
            nextToken: token, 
            userName: self.userName, 
            workspaceIds: self.workspaceIds
        )

    }
}


