// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/aws-sdk-swift/blob/master/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import NIO

//MARK: Paginators

extension Kafka {

    ///  Returns a list of all the operations that have been performed on the specified MSK cluster.
    public func listClusterOperationsPaginator(_ input: ListClusterOperationsRequest, onPage: @escaping (ListClusterOperationsResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listClusterOperations, tokenKey: \ListClusterOperationsResponse.nextToken, onPage: onPage)
    }

    ///  Returns a list of all the MSK clusters in the current Region.
    public func listClustersPaginator(_ input: ListClustersRequest, onPage: @escaping (ListClustersResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listClusters, tokenKey: \ListClustersResponse.nextToken, onPage: onPage)
    }

    ///  Returns a list of all the revisions of an MSK configuration.
    public func listConfigurationRevisionsPaginator(_ input: ListConfigurationRevisionsRequest, onPage: @escaping (ListConfigurationRevisionsResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listConfigurationRevisions, tokenKey: \ListConfigurationRevisionsResponse.nextToken, onPage: onPage)
    }

    ///  Returns a list of all the MSK configurations in this Region.
    public func listConfigurationsPaginator(_ input: ListConfigurationsRequest, onPage: @escaping (ListConfigurationsResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listConfigurations, tokenKey: \ListConfigurationsResponse.nextToken, onPage: onPage)
    }

    ///  Returns a list of Kafka versions.
    public func listKafkaVersionsPaginator(_ input: ListKafkaVersionsRequest, onPage: @escaping (ListKafkaVersionsResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listKafkaVersions, tokenKey: \ListKafkaVersionsResponse.nextToken, onPage: onPage)
    }

    ///  Returns a list of the broker nodes in the cluster.
    public func listNodesPaginator(_ input: ListNodesRequest, onPage: @escaping (ListNodesResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listNodes, tokenKey: \ListNodesResponse.nextToken, onPage: onPage)
    }

    ///  Returns a list of the Scram Secrets associated with an Amazon MSK cluster.
    public func listScramSecretsPaginator(_ input: ListScramSecretsRequest, onPage: @escaping (ListScramSecretsResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listScramSecrets, tokenKey: \ListScramSecretsResponse.nextToken, onPage: onPage)
    }

}

extension Kafka.ListClusterOperationsRequest: AWSPaginateStringToken {
    public func usingPaginationToken(_ token: String) -> Kafka.ListClusterOperationsRequest {
        return .init(
            clusterArn: self.clusterArn, 
            maxResults: self.maxResults, 
            nextToken: token
        )

    }
}

extension Kafka.ListClustersRequest: AWSPaginateStringToken {
    public func usingPaginationToken(_ token: String) -> Kafka.ListClustersRequest {
        return .init(
            clusterNameFilter: self.clusterNameFilter, 
            maxResults: self.maxResults, 
            nextToken: token
        )

    }
}

extension Kafka.ListConfigurationRevisionsRequest: AWSPaginateStringToken {
    public func usingPaginationToken(_ token: String) -> Kafka.ListConfigurationRevisionsRequest {
        return .init(
            arn: self.arn, 
            maxResults: self.maxResults, 
            nextToken: token
        )

    }
}

extension Kafka.ListConfigurationsRequest: AWSPaginateStringToken {
    public func usingPaginationToken(_ token: String) -> Kafka.ListConfigurationsRequest {
        return .init(
            maxResults: self.maxResults, 
            nextToken: token
        )

    }
}

extension Kafka.ListKafkaVersionsRequest: AWSPaginateStringToken {
    public func usingPaginationToken(_ token: String) -> Kafka.ListKafkaVersionsRequest {
        return .init(
            maxResults: self.maxResults, 
            nextToken: token
        )

    }
}

extension Kafka.ListNodesRequest: AWSPaginateStringToken {
    public func usingPaginationToken(_ token: String) -> Kafka.ListNodesRequest {
        return .init(
            clusterArn: self.clusterArn, 
            maxResults: self.maxResults, 
            nextToken: token
        )

    }
}

extension Kafka.ListScramSecretsRequest: AWSPaginateStringToken {
    public func usingPaginationToken(_ token: String) -> Kafka.ListScramSecretsRequest {
        return .init(
            clusterArn: self.clusterArn, 
            maxResults: self.maxResults, 
            nextToken: token
        )

    }
}


